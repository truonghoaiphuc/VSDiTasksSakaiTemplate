{"ast":null,"code":"import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RxState } from '@rx-angular/state';\nimport { MessageService } from 'primeng/api';\nimport { catchError, filter, mergeMap, of, Subject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/user.service\";\nimport * as i2 from \"src/app/Services/authen.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@rx-angular/state\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"@angular/common\";\nexport class LoginComponent {\n  constructor(_userService, _authService, _router, formBuilder, _state) {\n    this._userService = _userService;\n    this._authService = _authService;\n    this._router = _router;\n    this.formBuilder = formBuilder;\n    this._state = _state;\n    this.valCheck = ['remember'];\n    this.msgs = [];\n    this.loading = false;\n    this.onSubmit = new Subject();\n    this.onSubmitHandler$ = new Subject();\n\n    this._state.set({\n      hasError: false,\n      loading: false\n    });\n\n    this.msgs = [{\n      severity: 'error',\n      summary: 'Đăng nhập thất bại',\n      detail: 'Tên đăng nhập hoặc mật khẩu không hợp lệ'\n    }];\n  }\n\n  get state$() {\n    return this._state.select();\n  }\n\n  get loading$() {\n    return this._state.select('loading');\n  }\n\n  initForm() {\n    this.loginForm = this.formBuilder.group({\n      userName: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  manageEvents() {\n    this._state.hold(this.onSubmit, () => {\n      const valid = this.loginForm.valid;\n\n      this._state.set({\n        hasError: !valid\n      });\n\n      if (!valid) {\n        return;\n      }\n\n      this._state.set({\n        loading: true\n      });\n\n      this.onSubmitHandler$.next({\n        userName: this.loginForm.controls['userName'].value,\n        password: this.loginForm.controls['password'].value\n      });\n    });\n  }\n\n  connectState() {\n    const handler$ = this.onSubmitHandler$.pipe(mergeMap(data => this._userService.login(data.userName, data.password).pipe(tap(() => this._state.set({\n      loading: true\n    }))).pipe(catchError(err => of({\n      statusCode: err.statusCode,\n      token: ''\n    })))));\n\n    this._state.connect(handler$, (prev, curr) => Object.assign(Object.assign({}, prev), {\n      statusCode: curr.statusCode,\n      hasError: !curr.token,\n      token: curr.token,\n      loading: false\n    }));\n\n    this._state.select('token').pipe(filter(x => !!x)).subscribe({\n      next: token => {\n        this._authService.persistToken(token);\n\n        this._router.navigate(['dashboard']);\n      }\n    });\n  }\n\n  showErrorViaMessages() {\n    this.msgs = [];\n    this.msgs.push({\n      severity: 'error',\n      summary: 'Error Message',\n      detail: 'Validation failed'\n    });\n  }\n\n  ngOnInit() {\n    this.initForm();\n    this.manageEvents();\n    this.connectState();\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthenService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.RxState));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  features: [i0.ɵɵProvidersFeature([RxState, MessageService])],\n  decls: 22,\n  vars: 4,\n  consts: [[1, \"login-wrapper\"], [\"id\", \"container\", 1, \"container\"], [1, \"form-container\", \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"placeholder\", \"T\\u00EAn \\u0111\\u0103ng nh\\u1EADp\", \"formControlName\", \"userName\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [1, \"content\"], [1, \"checkbox\"], [\"type\", \"checkbox\", \"name\", \"checkbox\", \"id\", \"checkbox\"], [1, \"pass-link\"], [\"href\", \"#\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"submit\", 3, \"loading\"], [1, \"overlay-container\"], [1, \"overlay\"], [1, \"overlay-panel\", \"overlay-right\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit.next();\n      });\n      i0.ɵɵelementStart(4, \"h1\");\n      i0.ɵɵtext(5, \"Login hire.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4)(7, \"input\", 5);\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementStart(11, \"label\");\n      i0.ɵɵtext(12, \"Remember me\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 9)(14, \"a\", 10);\n      i0.ɵɵtext(15, \"Forgot password?\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"button\", 11);\n      i0.ɵɵpipe(17, \"async\");\n      i0.ɵɵtext(18, \" \\u0110\\u0103ng nh\\u1EADp \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"div\", 13);\n      i0.ɵɵelement(21, \"div\", 14);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"loading\", i0.ɵɵpipeBind1(17, 2, ctx.loading$));\n    }\n  },\n  dependencies: [i6.ButtonDirective, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i7.AsyncPipe],\n  styles: [\"[_nghost-%COMP%]     .pi-eye, [_nghost-%COMP%]     .pi-eye-slash {\\n  transform: scale(1.6);\\n  margin-right: 1rem;\\n  color: var(--primary-color) !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC50cyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXFNha2FpJTIwVGVtcGxhdGVcXHNyY1xcYXBwXFxsYXlvdXRcXHVuYXV0aG9yaXplZFxcbG9naW5cXGxvZ2luLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDWTs7RUFFSSxxQkFBQTtFQUNBLGtCQUFBO0VBQ0Esc0NBQUE7QUNBaEIiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LnRzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICAgICAgICA6aG9zdCA6Om5nLWRlZXAgLnBpLWV5ZSxcbiAgICAgICAgICAgIDpob3N0IDo6bmctZGVlcCAucGktZXllLXNsYXNoIHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuNik7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAiLCI6aG9zdCA6Om5nLWRlZXAgLnBpLWV5ZSxcbjpob3N0IDo6bmctZGVlcCAucGktZXllLXNsYXNoIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjYpO1xuICBtYXJnaW4tcmlnaHQ6IDFyZW07XG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKSAhaW1wb3J0YW50O1xufSJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormBuilder","FormGroup","Validators","RxState","MessageService","catchError","filter","mergeMap","of","Subject","tap","LoginComponent","constructor","_userService","_authService","_router","formBuilder","_state","set","hasError","loading","msgs","severity","summary","detail","state$","select","loading$","initForm","loginForm","group","userName","required","password","manageEvents","hold","onSubmit","valid","onSubmitHandler$","next","controls","value","connectState","handler$","pipe","data","login","err","statusCode","token","connect","prev","curr","Object","x","subscribe","persistToken","navigate","showErrorViaMessages","push","ngOnInit","i0","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\Code\\2022\\Sakai Template\\src\\app\\layout\\unauthorized\\login\\login.component.ts","E:\\Code\\2022\\Sakai Template\\src\\app\\layout\\unauthorized\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { RxState } from '@rx-angular/state';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport {\r\n    catchError,\r\n    filter,\r\n    mergeMap,\r\n    Observable,\r\n    of,\r\n    Subject,\r\n    tap,\r\n} from 'rxjs';\r\nimport { AuthenService } from 'src/app/Services/authen.service';\r\nimport { UserService } from 'src/app/Services/user.service';\r\nimport { LoginState } from '../state';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styles: [\r\n        `\r\n            :host ::ng-deep .pi-eye,\r\n            :host ::ng-deep .pi-eye-slash {\r\n                transform: scale(1.6);\r\n                margin-right: 1rem;\r\n                color: var(--primary-color) !important;\r\n            }\r\n        `,\r\n    ],\r\n    providers: [RxState, MessageService],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    valCheck: string[] = ['remember'];\r\n    msgs: Message[] = [];\r\n\r\n    loginForm!: FormGroup;\r\n    loading: boolean = false;\r\n    onSubmit = new Subject<void>();\r\n    onSubmitHandler$ = new Subject<{ userName: string; password: string }>();\r\n\r\n    get state$(): Observable<LoginState> {\r\n        return this._state.select();\r\n    }\r\n\r\n    get loading$():Observable<boolean>{\r\n        return this._state.select('loading');\r\n    }\r\n\r\n    constructor(\r\n        private _userService: UserService,\r\n        private _authService: AuthenService,\r\n        private _router: Router,\r\n        private formBuilder: FormBuilder,\r\n        private _state: RxState<LoginState>\r\n    ) {\r\n        this._state.set({ hasError: false , loading:false});\r\n        this.msgs = [\r\n            {\r\n                severity: 'error',\r\n                summary: 'Đăng nhập thất bại',\r\n                detail: 'Tên đăng nhập hoặc mật khẩu không hợp lệ',\r\n            },\r\n        ];\r\n    }\r\n\r\n    initForm(): void {\r\n        this.loginForm = this.formBuilder.group({\r\n            userName: ['', [Validators.required]],\r\n            password: ['', [Validators.required]],\r\n        });\r\n    }\r\n\r\n    private manageEvents() {\r\n        this._state.hold(this.onSubmit, () => {\r\n            const valid = this.loginForm.valid;\r\n            this._state.set({\r\n                hasError: !valid,\r\n            });\r\n            if (!valid) {\r\n                return;\r\n            }\r\n            this._state.set({loading:true});\r\n            this.onSubmitHandler$.next({\r\n                userName: this.loginForm.controls['userName'].value,\r\n                password: this.loginForm.controls['password'].value,\r\n            });\r\n        });\r\n    }\r\n\r\n    private connectState(): void {\r\n        const handler$ = this.onSubmitHandler$.pipe(\r\n            mergeMap((data) =>            \r\n                this._userService\r\n                    .login(data.userName, data.password)\r\n                    .pipe(tap(()=>this._state.set({loading:true})))                    \r\n                    .pipe(\r\n                        catchError((err: { statusCode: string }) =>\r\n                            of({ statusCode: err.statusCode, token: '' })\r\n                        )\r\n                    )\r\n            )\r\n        );\r\n        this._state.connect(handler$, (prev, curr) => ({\r\n            ...prev,\r\n            statusCode: curr.statusCode,\r\n            hasError: !curr.token,\r\n            token: curr.token,\r\n            loading:false\r\n        }));\r\n\r\n        this._state\r\n            .select('token')\r\n            .pipe(filter((x) => !!x))\r\n            .subscribe({\r\n                next: (token) => {\r\n                    this._authService.persistToken(token);\r\n                    this._router.navigate(['dashboard']);\r\n                },\r\n            });\r\n    }\r\n    showErrorViaMessages() {\r\n        this.msgs = [];\r\n        this.msgs.push({\r\n            severity: 'error',\r\n            summary: 'Error Message',\r\n            detail: 'Validation failed',\r\n        });\r\n    }\r\n    ngOnInit(): void {\r\n        this.initForm();\r\n        this.manageEvents();\r\n        this.connectState();\r\n    }\r\n}\r\n","<!-- <div\r\n    class=\"surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden\"\r\n>\r\n    <div class=\"flex flex-column align-items-center justify-content-center\">\r\n        <img\r\n            src=\"assets/LOGO-VSD.png\"\r\n            alt=\"Sakai logo\"\r\n            class=\"mb-5 w-6rem flex-shrink-0\"\r\n        />\r\n        <div\r\n            style=\"\r\n                border-radius: 56px;\r\n                padding: 0.3rem;\r\n                background: linear-gradient(\r\n                    180deg,\r\n                    var(--primary-color) 10%,\r\n                    rgba(33, 150, 243, 0) 30%\r\n                );\r\n            \"\r\n        >\r\n            <div\r\n                class=\"w-full surface-card py-8 px-5 sm:px-8\"\r\n                style=\"border-radius: 53px\"\r\n            >\r\n                <div class=\"text-center mb-5\">\r\n                    <div class=\"text-900 text-3xl font-medium mb-3\">\r\n                        Hệ thống quản lý công việc\r\n                    </div>\r\n                    <span class=\"text-600 font-medium\">Đăng nhập hệ thống</span>\r\n                </div>\r\n                <ng-container *ngIf=\"state$ | async as vm\">\r\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit.next()\">\r\n                        <p-messages\r\n                            [(value)]=\"msgs\"\r\n                            [enableService]=\"false\"\r\n                            *ngIf=\"vm.hasError\"\r\n                        ></p-messages>\r\n                        <div>\r\n                            <label\r\n                                for=\"email1\"\r\n                                class=\"block text-900 text-xl font-medium mb-2\"\r\n                                >Tên đăng nhập</label\r\n                            >\r\n                            <input\r\n                                id=\"email1\"\r\n                                type=\"text\"\r\n                                placeholder=\"Tên đăng nhập\"\r\n                                pInputText\r\n                                class=\"w-full md:w-30rem mb-5\"\r\n                                style=\"padding: 1rem\"\r\n                                formControlName=\"userName\"\r\n                            />\r\n\r\n                            <label\r\n                                for=\"password1\"\r\n                                class=\"block text-900 font-medium text-xl mb-2\"\r\n                                >Mật khẩu</label\r\n                            >\r\n                            <p-password\r\n                                id=\"password1\"\r\n                                placeholder=\"Mật khẩu\"\r\n                                [toggleMask]=\"true\"\r\n                                styleClass=\"mb-5\"\r\n                                inputStyleClass=\"w-full p-3 md:w-30rem\"\r\n                                formControlName=\"password\"\r\n                            ></p-password>\r\n\r\n                            <div\r\n                                class=\"flex align-items-center justify-content-between mb-5 gap-5\"\r\n                            >\r\n                                <div class=\"flex align-items-center\">\r\n                                    <p-checkbox\r\n                                        id=\"rememberme1\"\r\n                                        [binary]=\"true\"\r\n                                        styleClass=\"mr-2\"\r\n                                    ></p-checkbox>\r\n                                    <label for=\"rememberme1\">Remember me</label>\r\n                                </div>\r\n                                <a\r\n                                    class=\"font-medium no-underline ml-2 text-right cursor-pointer\"\r\n                                    style=\"color: var(--primary-color)\"\r\n                                    >Quên mật khẩu?</a\r\n                                >\r\n                            </div>\r\n                            <button\r\n                                pButton\r\n                                [loading]=\"(loading$ | async)!\"\r\n                                pRipple\r\n                                label=\"Đăng nhập\"\r\n                                class=\"w-full p-3 text-xl\"\r\n                                type=\"submit\"\r\n                            ></button>\r\n                        </div>\r\n                    </form>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n<div class=\"login-wrapper\">\r\n    <div class=\"container\" id=\"container\">\r\n        <div class=\"form-container login-container\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit.next()\">\r\n                <h1>Login hire.</h1>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Tên đăng nhập\"\r\n                    formControlName=\"userName\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    formControlName=\"password\"\r\n                />\r\n                <div class=\"content\">\r\n                    <div class=\"checkbox\">\r\n                        <input type=\"checkbox\" name=\"checkbox\" id=\"checkbox\" />\r\n                        <label>Remember me</label>\r\n                    </div>\r\n                    <div class=\"pass-link\">\r\n                        <a href=\"#\">Forgot password?</a>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    pButton\r\n                    [loading]=\"(loading$ | async)!\"\r\n                    pRipple\r\n                    type=\"submit\"\r\n                >\r\n                    Đăng nhập\r\n                </button>\r\n            </form>\r\n        </div>\r\n        <div class=\"overlay-container\">\r\n            <div class=\"overlay\">\r\n                <div class=\"overlay-panel overlay-right\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}